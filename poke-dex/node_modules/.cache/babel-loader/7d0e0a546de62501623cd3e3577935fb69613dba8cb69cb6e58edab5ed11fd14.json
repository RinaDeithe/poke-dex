{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport _classCallCheck from \"/Users/mikkelandersen/Documents/gitRepos/Aflevering-2/poke-dex/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mikkelandersen/Documents/gitRepos/Aflevering-2/poke-dex/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/mikkelandersen/Documents/gitRepos/Aflevering-2/poke-dex/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/mikkelandersen/Documents/gitRepos/Aflevering-2/poke-dex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/mikkelandersen/Documents/gitRepos/Aflevering-2/poke-dex/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mikkelandersen/Documents/gitRepos/Aflevering-2/poke-dex/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar AnimatedTransform = /*#__PURE__*/function (_AnimatedWithChildren) {\n  _inherits(AnimatedTransform, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedTransform);\n  function AnimatedTransform(transforms) {\n    var _this;\n    _classCallCheck(this, AnimatedTransform);\n    _this = _super.call(this);\n    _this._transforms = transforms;\n    return _this;\n  }\n  _createClass(AnimatedTransform, [{\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__makeNative();\n          }\n        }\n      });\n      _get(_getPrototypeOf(AnimatedTransform.prototype), \"__makeNative\", this).call(this);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return this._transforms.map(function (transform) {\n        var result = {};\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            result[key] = value.__getValue();\n          } else {\n            result[key] = value;\n          }\n        }\n        return result;\n      });\n    }\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      return this._transforms.map(function (transform) {\n        var result = {};\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            result[key] = value.__getAnimatedValue();\n          } else {\n            // All transform components needed to recompose matrix\n            result[key] = value;\n          }\n        }\n        return result;\n      });\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      var _this2 = this;\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__addChild(_this2);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var _this3 = this;\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__removeChild(_this3);\n          }\n        }\n      });\n      _get(_getPrototypeOf(AnimatedTransform.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      var transConfigs = [];\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            transConfigs.push({\n              type: 'animated',\n              property: key,\n              nodeTag: value.__getNativeTag()\n            });\n          } else {\n            transConfigs.push({\n              type: 'static',\n              property: key,\n              value: NativeAnimatedHelper.transformDataType(value)\n            });\n          }\n        }\n      });\n      NativeAnimatedHelper.validateTransform(transConfigs);\n      return {\n        type: 'transform',\n        transforms: transConfigs\n      };\n    }\n  }]);\n  return AnimatedTransform;\n}(AnimatedWithChildren);\nexport default AnimatedTransform;","map":{"version":3,"names":["_classCallCheck","_createClass","_get","_getPrototypeOf","_inherits","_createSuper","AnimatedNode","AnimatedWithChildren","NativeAnimatedHelper","AnimatedTransform","_AnimatedWithChildren","_super","transforms","_this","call","_transforms","key","value","__makeNative","forEach","transform","prototype","__getValue","map","result","__getAnimatedValue","__attach","_this2","__addChild","__detach","_this3","__removeChild","__getNativeConfig","transConfigs","push","type","property","nodeTag","__getNativeTag","transformDataType","validateTransform"],"sources":["/Users/mikkelandersen/Documents/gitRepos/Aflevering-2/poke-dex/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedTransform.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nclass AnimatedTransform extends AnimatedWithChildren {\n  constructor(transforms) {\n    super();\n    this._transforms = transforms;\n  }\n  __makeNative() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n    });\n    super.__makeNative();\n  }\n  __getValue() {\n    return this._transforms.map(transform => {\n      var result = {};\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n  __getAnimatedValue() {\n    return this._transforms.map(transform => {\n      var result = {};\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getAnimatedValue();\n        } else {\n          // All transform components needed to recompose matrix\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n  __attach() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n  __detach() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n  __getNativeConfig() {\n    var transConfigs = [];\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag()\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value)\n          });\n        }\n      }\n    });\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs\n    };\n  }\n}\nexport default AnimatedTransform;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}