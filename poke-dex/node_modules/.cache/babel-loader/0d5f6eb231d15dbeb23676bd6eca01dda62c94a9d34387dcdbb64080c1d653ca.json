{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport _classCallCheck from \"/Users/mikkelandersen/Documents/gitRepos/Aflevering-2/poke-dex/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mikkelandersen/Documents/gitRepos/Aflevering-2/poke-dex/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/mikkelandersen/Documents/gitRepos/Aflevering-2/poke-dex/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mikkelandersen/Documents/gitRepos/Aflevering-2/poke-dex/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"stickySectionHeadersEnabled\"];\nimport Platform from '../../../exports/Platform';\nimport * as React from 'react';\nimport VirtualizedSectionList from '../VirtualizedSectionList';\n/**\n * A performant interface for rendering sectioned lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Configurable viewability callbacks.\n *  - List header support.\n *  - List footer support.\n *  - Item separator support.\n *  - Section header support.\n *  - Section separator support.\n *  - Heterogeneous data and item rendering support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *\n * If you don't need section support and want a simpler interface, use\n * [`<FlatList>`](https://reactnative.dev/docs/flatlist).\n *\n * Simple Examples:\n *\n *     <SectionList\n *       renderItem={({item}) => <ListItem title={item} />}\n *       renderSectionHeader={({section}) => <Header title={section.title} />}\n *       sections={[ // homogeneous rendering between sections\n *         {data: [...], title: ...},\n *         {data: [...], title: ...},\n *         {data: [...], title: ...},\n *       ]}\n *     />\n *\n *     <SectionList\n *       sections={[ // heterogeneous rendering between sections\n *         {data: [...], renderItem: ...},\n *         {data: [...], renderItem: ...},\n *         {data: [...], renderItem: ...},\n *       ]}\n *     />\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate and momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nvar SectionList = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(SectionList, _React$PureComponent);\n  var _super = _createSuper(SectionList);\n  function SectionList() {\n    var _this;\n    _classCallCheck(this, SectionList);\n    _this = _super.apply(this, arguments);\n    _this._captureRef = function (ref) {\n      _this._wrapperListRef = ref;\n    };\n    return _this;\n  }\n  /**\n   * Scrolls to the item at the specified `sectionIndex` and `itemIndex` (within the section)\n   * positioned in the viewable area such that `viewPosition` 0 places it at the top (and may be\n   * covered by a sticky header), 1 at the bottom, and 0.5 centered in the middle. `viewOffset` is a\n   * fixed number of pixels to offset the final target position, e.g. to compensate for sticky\n   * headers.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  _createClass(SectionList, [{\n    key: \"scrollToLocation\",\n    value: function scrollToLocation(params) {\n      if (this._wrapperListRef != null) {\n        this._wrapperListRef.scrollToLocation(params);\n      }\n    }\n\n    /**\n     * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n     * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n     * taps on items or by navigation actions.\n     */\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n      listRef && listRef.recordInteraction();\n    }\n\n    /**\n     * Displays the scroll indicators momentarily.\n     *\n     * @platform ios\n     */\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n      listRef && listRef.flashScrollIndicators();\n    }\n\n    /**\n     * Provides a handle to the underlying scroll responder.\n     */\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n      if (listRef) {\n        return listRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n      if (listRef) {\n        return listRef.getScrollableNode();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        _stickySectionHeadersEnabled = _this$props.stickySectionHeadersEnabled,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n      var stickySectionHeadersEnabled = _stickySectionHeadersEnabled !== null && _stickySectionHeadersEnabled !== void 0 ? _stickySectionHeadersEnabled : Platform.OS === 'ios';\n      return /*#__PURE__*/React.createElement(VirtualizedSectionList, _extends({}, restProps, {\n        stickySectionHeadersEnabled: stickySectionHeadersEnabled,\n        ref: this._captureRef,\n        getItemCount: function getItemCount(items) {\n          return items.length;\n        },\n        getItem: function getItem(items, index) {\n          return items[index];\n        }\n      }));\n    }\n  }]);\n  return SectionList;\n}(React.PureComponent);\nexport { SectionList as default };","map":{"version":3,"names":["_classCallCheck","_createClass","_inherits","_createSuper","_extends","_objectWithoutPropertiesLoose","_excluded","Platform","React","VirtualizedSectionList","SectionList","_React$PureComponent","_super","_this","apply","arguments","_captureRef","ref","_wrapperListRef","key","value","scrollToLocation","params","recordInteraction","listRef","getListRef","flashScrollIndicators","getScrollResponder","getScrollableNode","render","_this$props","props","_stickySectionHeadersEnabled","stickySectionHeadersEnabled","restProps","OS","createElement","getItemCount","items","length","getItem","index","PureComponent","default"],"sources":["/Users/mikkelandersen/Documents/gitRepos/Aflevering-2/poke-dex/node_modules/react-native-web/dist/vendor/react-native/SectionList/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"stickySectionHeadersEnabled\"];\nimport Platform from '../../../exports/Platform';\nimport * as React from 'react';\nimport VirtualizedSectionList from '../VirtualizedSectionList';\n/**\n * A performant interface for rendering sectioned lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Configurable viewability callbacks.\n *  - List header support.\n *  - List footer support.\n *  - Item separator support.\n *  - Section header support.\n *  - Section separator support.\n *  - Heterogeneous data and item rendering support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *\n * If you don't need section support and want a simpler interface, use\n * [`<FlatList>`](https://reactnative.dev/docs/flatlist).\n *\n * Simple Examples:\n *\n *     <SectionList\n *       renderItem={({item}) => <ListItem title={item} />}\n *       renderSectionHeader={({section}) => <Header title={section.title} />}\n *       sections={[ // homogeneous rendering between sections\n *         {data: [...], title: ...},\n *         {data: [...], title: ...},\n *         {data: [...], title: ...},\n *       ]}\n *     />\n *\n *     <SectionList\n *       sections={[ // heterogeneous rendering between sections\n *         {data: [...], renderItem: ...},\n *         {data: [...], renderItem: ...},\n *         {data: [...], renderItem: ...},\n *       ]}\n *     />\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate and momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nexport default class SectionList extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this._captureRef = ref => {\n      this._wrapperListRef = ref;\n    };\n  }\n  /**\n   * Scrolls to the item at the specified `sectionIndex` and `itemIndex` (within the section)\n   * positioned in the viewable area such that `viewPosition` 0 places it at the top (and may be\n   * covered by a sticky header), 1 at the bottom, and 0.5 centered in the middle. `viewOffset` is a\n   * fixed number of pixels to offset the final target position, e.g. to compensate for sticky\n   * headers.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToLocation(params) {\n    if (this._wrapperListRef != null) {\n      this._wrapperListRef.scrollToLocation(params);\n    }\n  }\n\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  recordInteraction() {\n    var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    listRef && listRef.recordInteraction();\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators() {\n    var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    listRef && listRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  getScrollResponder() {\n    var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    if (listRef) {\n      return listRef.getScrollResponder();\n    }\n  }\n  getScrollableNode() {\n    var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    if (listRef) {\n      return listRef.getScrollableNode();\n    }\n  }\n  render() {\n    var _this$props = this.props,\n      _stickySectionHeadersEnabled = _this$props.stickySectionHeadersEnabled,\n      restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    var stickySectionHeadersEnabled = _stickySectionHeadersEnabled !== null && _stickySectionHeadersEnabled !== void 0 ? _stickySectionHeadersEnabled : Platform.OS === 'ios';\n    return /*#__PURE__*/React.createElement(VirtualizedSectionList, _extends({}, restProps, {\n      stickySectionHeadersEnabled: stickySectionHeadersEnabled,\n      ref: this._captureRef,\n      getItemCount: items => items.length,\n      getItem: (items, index) => items[index]\n    }));\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}